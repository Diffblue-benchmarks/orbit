/*
 Copyright (C) 2015 - 2018 Electronic Arts Inc.  All rights reserved.
 This file is part of the Orbit Project <http://www.orbit.cloud>.
 See license in LICENSE.
 */

def configureProject(final String projectName, final List<List<Project>> toAdd) {
    toAdd.each {
        it.add(project(projectName))
    }
}

// Project Configurations
def withKotlin = []
def withJava = []
def withTests = []

configureProject(":framework:orbit-logging", [withKotlin, withJava, withTests])
configureProject(":framework:orbit-util", [withKotlin, withJava, withTests])
configureProject(":framework:orbit-concurrent", [withKotlin, withJava, withTests])

buildscript {
    ext.kotlinVersion = getProperty("kotlin.version")
    ext.junitPlatformVersion = "1.0.3"
    ext.dokkaVersion = "0.9.16-eap-3"

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        } // TODO: Remove when dokka stable works with Kotlin 1.2
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
        classpath("org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion")
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}")
    }
}

// Global Properties
ext {
    orbitGroup = "cloud.orbit"
    orbitVersion = getProperty("orbit.version")
    orbitCodename = getProperty("orbit.codename")
    orbitCompat = getProperty("orbit.compat")
    orbitUrl = "http://www.orbit.cloud"
    orgName = "Electronic Arts"
    orgUrl = "http://www.ea.com"

    javaTargetVersion = "9"
    javaSourceVersion = "9"
    kotlinTargetVersion = "1.8"

    junitJupiterVersion = "5.1.0"
    slf4jVersion = "1.7.25"
}

allprojects {
    group =  orbitGroup
    version = orbitVersion

    repositories {
        mavenCentral()
    }
}

// Kotlin
configure(withKotlin) {
    apply plugin: "kotlin"

    compileKotlin {
        kotlinOptions {
            jvmTarget = kotlinTargetVersion
            compileKotlin.destinationDir = compileJava.destinationDir
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = kotlinTargetVersion
        }
    }

    dependencies {
        compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
        compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    }
}

// Java
configure(withJava) {
    apply plugin: "java"

    compileJava   {
        sourceCompatibility = javaSourceVersion
        targetCompatibility = javaTargetVersion

        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
            ]
            classpath = files()
        }
    }

    compileTestJava {
        sourceCompatibility = javaSourceVersion
        targetCompatibility = javaTargetVersion
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        manifest {
            attributes(
                    "Name": project.name,
                    "Implementation-Title": "$orbitCodename Orbit",
                    "Implementation-Version": orbitVersion,
                    "Implementation-Vendor": orgName,
                    "Specification-Title": "$orbitCodename Orbit",
                    "Specification-Version": orbitCompat,
                    "Specification-Vendor": orgName
            )
        }
    }
}

// Tests
configure(withTests) {
    apply plugin: "org.junit.platform.gradle.plugin"

    dependencies {
        testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
        testRuntime("org.slf4j:slf4j-simple:$slf4jVersion")
    }
}